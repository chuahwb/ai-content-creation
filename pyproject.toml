[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "churns"
version = "0.1.0"
description = "AI-powered content generation engine"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Churns Team" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11"
dependencies = [
    # Core API framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "python-multipart>=0.0.6", # For form data in FastAPI
    # Data validation and models
    "pydantic>=2.5.0",
    "pydantic-ai>=0.2.0",
    "sqlmodel>=0.0.14",
    "sqlalchemy>=2.0.0", # Required by SQLModel and database operations
    # AI/ML clients
    "openai>=1.3.0",
    "instructor>=0.4.0",
    "sentence-transformers>=2.2.2",
    # HTTP client and utilities
    "requests>=2.31.0",
    "tenacity>=8.2.0",
    # Image processing
    "Pillow>=10.1.0",
    # Configuration and environment
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    # Logging and monitoring
    "loguru>=0.7.2",
    # Database
    "aiosqlite>=0.19.0",
    "opencv-python>=4.12.0.88",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",  # For FastAPI testing
    
    # Code quality
    "ruff>=0.1.5",
    "black>=23.10.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    
    # Development tools
    "watchfiles>=0.21.0",
]

[project.urls]
Homepage = "https://github.com/your-org/churns"
Repository = "https://github.com/your-org/churns"

[tool.hatch.build.targets.wheel]
packages = ["churns"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ["py311"]
line-length = 88
skip-string-normalization = true

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["churns"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 
